source('~/data-science/acs.R')
source('~/data-science/acs.R')
source('~/data-science/acs.R')
source('~/data-science/acs.R')
source('~/data-science/acs.R')
source('~/data-science/acs.R')
?read.fwf
source('~/data-science/acs.R')
library("swirl")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, by = package)
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
data1 <- read.csv("./data-science/ss06hid.csv")
library(dplyr)
data1_tbl <- tbl_df(data1)
data1_tbl
rm("data1")
data1 <- data1_tbl
rm("data1_tbl")
data1
data1
data1_1 <- select(data1, ACR == 3, AGS == 6)
agricultureLogical <- data1[ACR == 3 & AGS == 6,]
agricultureLogical <- data1[data1$ACR == 3 & data1$AGS == 6,]
head(data1[agricultureLogical, ])
data1
data1 <- read.csv("./data-science/ss06hid.csv")
agricultureLogical <- data1[data1$ACR == 3 & data1$AGS == 6, ]
data1[which(agricultureLogical), ]
data1[which(agricultureLogical)]
which(agricultureLogical)
head(agricultureLogical)
data1[(data1$ACR == 3 & data1$AGS == 6), ]
data1[(data1$ACR == 3 & data1$AGS == 6 & !is.na(data1)), ]
data1[which(data1$ACR == 3 & data1$AGS == 6), ]
agricultureLogical <- data1[(data1$ACR == 3 & data1$AGS == 6), ]
agricultureLogical
agricultureLogical <- which(data1$ACR == 3 & data1$AGS == 6)
str(agricultureLogical)
agricultureLogical
agricultureLogical <- data1[(data1$ACR == 3 & data1$AGS == 6), ]
agricultureLogical
library(jpeg)
read.jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
library("jpeg")
read.jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
install.packages("jpeg")
install.packages("jpeg")
library("jpeg")
read.jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
help.search(jpeg)
help.search("jpeg")
jpeg::readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
jpeg::readJPEG(url("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"), native = TRUE)
jpeg::readJPEG(url("./data-science/getdata%2Fjeff.jpg"), native = TRUE)
jpeg::readJPEG("./data-science/getdata%2Fjeff.jpg", native = TRUE)
jpeg::readJPEG("./data-science/getdata-jeff.jpg", native = TRUE)
jpg <- jpeg::readJPEG("./data-science/getdata-jeff.jpg", native = TRUE)
quantile(jpg, c(30, 80))
quantile(jpg, probs = c(30, 80))
?quantile
quantile(jpg, c(0.3, 0.8))
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
educational_data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
?match
1:10 %in% c(1,3,5,9)
head(gdp)
head(educational_data)
head(educational_data$CountryCode, 30)
head(gdp)
head(gdp$X, 50)
match(gdp$x %in% educational_data$CountryCode)
1:10 %in% c(1,3,5,9)
sstr <- c("c","ab","B","bba","c",NA,"@","bla","a","Ba","%")
sstr[sstr %in% c(letters, LETTERS)]
educational_data[gdp$x %in% educational_data$CountryCode]
educational_data[match(gdp$x, educational_data$CountryCode)]
names(gdp)
names(educational_data)
mergedData <- merge(gdp, educational_data, by.x = "X", by.y = "CountryCode", all = TRUE)
head(mergedData)
str(mergedData)
?merge
head(gdp)
head(gdp, 20)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4)
gdp
head(gdp)
mergedData <- merge(gdp, educational_data, by.x = "X", by.y = "CountryCode", all = TRUE)
str(mergedData)
head(mergedData)
head(mergedData)
mergedData[complete.cases(mergedData),]
mergedData[complete.cases(mergedData$X),]
md2 <- mergedData[complete.cases(mergedData$X),]
str(md2)
head(gdp)
head(educational_data)
gdp$X
complete.cases(gdp$X)
gdp$x != ""
gdp$x[321]
gdp$x != NULL
gdp$x == NULL
gdp$x[gdp$x == NULL]
gdp[gdp$x %in% educational_data$CountryCode]
gdp[gdp$X %in% educational_data$CountryCode]
educational_data[gdp$x %in% educational_data$CountryCode]
mergedData <- merge(educational_data, gdp, by.x="CountryCode", by.y="X")
str(mergedData)
mergedData <- merge(educational_data, gdp, by.x="CountryCode", by.y="X", all = TRUE)
head(mergedData)
str(mergedData)
mergedData <- merge(educational_data, gdp, by.x="CountryCode", by.y="X")
str(mergedData)
names(gdp)
names(educational_data)
head(gdp)
mergedData[order(X.4), ]
mergedData[order(X.4), ]
mergedData[order(mergedData$X.4), ]
x <- mergedData[order(mergedData$X.4), ]
x[13]
x[13,]
tail(x)
head(x)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
mergedData <- merge(educational_data, gdp, by.x = "CountryCode", by.y = "X")
str(mergedData)
educational_data[match(gdp$x %in% educational_data$CountryCode)]
educational_data[gdp$x %in% educational_data$CountryCode]
x <- educational_data[gdp$x %in% educational_data$CountryCode]
x[1]
x[1,]
x <- educational_data[gdp$x %in% educational_data$CountryCode, ]
str(x)
x <- educational_data[, gdp$x %in% educational_data$CountryCode]
str(x)
x <- educational_data[gdp$x %in% educational_data$CountryCode, gdp$x %in% educational_data$CountryCode]
str(x)
gdp[gdp$x %in% educational_data$CountryCode, ]
educational_data[educational_data$CountryCode %in% gdp$X, ]
x <- educational_data[educational_data$CountryCode %in% gdp$X, ]
str(x)
x
names(x)
head(gdp)
head(gdp)
names(gdp)
y <- merge(educational_data, gdp, by.x = "CountryCode", by.y = "X")
head(y)
str(y)
y
names(y)
z <- y[order(y$Gross.domestic.product.2012), ]
z[13, ]
head(z)
tail(z)
names(y)
head(gdp, 20)
tail(gdp)
tail(gdp, 30)
tail(gdp, 50)
tail(gdp, 100)
tail(gdp, 50)
gdp
head(gdp)
head(educational_data)
names(educational_data)
head(educational_data$Income.Group)
head(x)
summary(educational_data)
table(y$Gross.domestic.product.2012, y$Income.Group)
table(gdp$X %in% educational_data$CountryCode)
head(gdp)
data1 <- read.csv("./data-science/ss06hid.csv")
names(data1)
strsplit(names(data1), "wgtp")
strsplit(names(data1), "wgtp")[123]
rm("data1")
ls()
data1 <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"))
head(data1)
head(data1)
data1$X.3 <- as.integer(data1$X.3)
head(data1)
data1 <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"), skip=4)
head(data1)
head(data1, 20)
data1$X.3 <- gsub(",", "", data1$X.3)
head(data1, 20)
data1$X.4 <- gsub(",", "", data1$X.4)
head(data1, 20)
mean(data1$X.4)
mean(data1$X.4, na.rm = TRUE)
class(data1$X.4)
data1$gdp <- as.integer(data1$X.4)
head(data1)
mean(data1$gdp)
mean(data1$gdp, na.rm = TRUE)
head(data1, 50)
tail(data, 50)
tail(data1, 50)
data1 <- data1[1:277, ]
tail(data1, 50)
data1 <- data1[1:232, ]
tail(data1, 50)
mean(data1$gdp)
mean(data1$gdp, na.rm = TRUE)
ls()
rm("data1")
data <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"), stringsAsFactors = FALSE, header = FALSE)
head(data, 10)
tail(data, 10)
head(data, 20)
tail(data, 10)
head(data)
tail(data, 100)
data1 <- data[6:236, ]
head(data1, 10)
tail(data1, 10)
head(data)
tail(data1, 40)
data1 <- data[6:200, ]
tail(data1, 30)
data1 <- data[6:195, ]
head(data1)
tail(data1)
data1$gdp <- data1$X.4
head(data1)
head(data1$gdp)
head(data1)
data1$gdp <- data1$V5
head(data1)
data1$gdp <- gsub(",", "", data1$gdp)
head(data1)
mean(data1$gdp)
data1$gdp <- as.integer(data1$gdp)
head(data1)
mean(data1$gdp, na.rm = TRUE)
countryNames <- data1$V4
head(countryNames)
grep("^United", countryNames)
ls()
rm("countryNames", "data", "data1")
ls()
gdpraw <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"), stringsAsFactors = FALSE, header = FALSE)
head(gdpraw)
tail(gdpraw)
gdp <- gdpraw[6:195, ]
head(gdp, 10)
tail(gdp, 10)
ls()
rm("gdpraw")
edraw <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"), stringsAsFactors = FALSE, header = FALSE)
head(edraw)
str(edraw)
head(edraw)
tail(edraw)
tail(edraw)
ed <- edraw[2:235, ]
head(ed)
names(ed) <- c("countrycode", "longname", "incomegroup", "region", "lendingcategory", "othergroups", "currencyunit")
head(ed)
head(edraw)
ls()
head(gdp)
str(gdp)
sum(is.na(gdp$V3))
sum(is.na(gdp$V7))
sum(is.na(gdp$V8))
sum(is.na(gdp$V9))
sum(is.na(gdp$V10))
str(gdp)
gdp <- gdp[, c(1, 2, 4, 5)]
str(gdp)
str(ed)
str(edraw)
head(edraw$V10, 30)
head(edraw)
tail(edraw)
ed <- edraw[2:235, c(1, 10)]
head(ed)
tail(ed)
ed[complete.cases(ed), ]
head(ed)
tail(ed)
head(ed)
head(gdp)
ls()
rm("edraw")
head(ed)
head(gdp)
merged <- merge(ed, gdp)
head(merged)
ls()
rm(gdp")
""
rm("gdp")
head(merged)
head(ed)
fslines <- ed[ed$V10 == ""]
fslines <- ed[ed$V10 == "",]
head(fslines)
head(ed)
ed2 <- ed[(-1 * fslines), ]
fslines <- ed$V10 == ""
ed2 <- ed[(-1 * fslines), ]
head(ed2)
ed2[2,]
ed2[1,]
ed2[1,2]
head(ed)
ed2 <- ed[!(is.na(ed$V10) | ed$V10==""), ]
head(ed2)
head(ed2, 2)
merged2 <- merged[!(is.na(merged$V10) | merged$V10==""), ]
head(merged2)
head(merged2, 3)
head(merged2, 4)
grep(merged2$V10, "June")
grep("June", merged2$V10)
length(grep("June", merged2$V10))
ls()
rm("ed", "ed2", "fslines", "merged", "merged2")
ls()
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
head(amzn)
head(index)
ls()
head(sampleTimes)
head(amzn)
length(grepl("2012-", sampleTimes))
length(grepl("2012", sampleTimes))
x <- lapply(sampleTimes, year(sampleTimes))
x <- lapply(sampleTimes, years(sampleTimes))
library(lubridate)
year(sampleTimes[1])
x <- lapply(sampleTimes, year(sampleTimes))
x <- lapply(sampleTimes, year())
x <- lapply(sampleTimes, year
)
head(x)
length(grepl("2012", x))
rm("x")
head(sampleTimes)
head(amzn)
tail(sampleTimes)
amzn
ls()
head(sampleTimes)
length(grepl("2012", amzn))
length(grepl("^2012", amzn))
sampleTimes
class(sampleTimes)
table(sampleTimes)
x <- lapply(sampleTimes, year)
table(x)
rm("x")
ls()
year2012 <- grepl("2012-*", sampleTimes)
table(year2012)
sampleTimes2012 <- subset(sampleTimes, year2012)
day <- format(sampleTimes2012, "%A")
table(day)
length(grepl("2012-*", sampleTimes))
table(grepl("2012-*", sampleTimes))
table(sampleTimes2012)
table(format(sampleTimes2012, "%A"))
ls()
rm("amzn", "day", "sampleTimes", "sampleTimes2012", "year2012")
ls()
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- './data-science/GDP4.csv'
download.file(file.url, file.dest, method='wget')
GDP <- read.csv(file.dest, skip=4, nrows=190)
download.file(file.url, file.dest)
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- './data-science/edu.csv'
download.file(file.url, file.dest)
edu <- read.csv(file.dest)
head(gdp)
head(GDP)
head(edu)
head(GDP)
merged <- merge(GDP, edu, by.x = 'X', by.y = 'CountryCode')
fy.june <- grep('Fiscal year end: June', merged$Special.Notes)
length(fy.june)
head(merged$Special.Notes)
head(merged)
head(merged)
length(grep("Fiscal year end: June", merged$Special.Notes))
length(grepl("Fiscal year end: June", merged$Special.Notes))
ls()
rm("edu", "file.dest", "file.url", "fy.june", "GDP", "merged")
ls()
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
setwd("./data-science/hardataset")
source('~/data-science/run_analysis.R')
head(testx)
ls()
rm("trainx", "testx")
source('~/data-science/run_analysis.R')
?read.table
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
str(trainx)
source('~/data-science/run_analysis.R')
str(trainx)
head(names(trainx))
rm("trainx")
ls()
rm("header")
?read.table
source('~/data-science/run_analysis.R')
install.packages("reshape2")
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
getwd()
ls()
rm("fileURL", "zipname")
setwd("../..")
getwd()
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
?unzip
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
ls()
head(activityLabels)
head(features)
head(featuresWanted)
head(featuresWanted.names)
head(train)
head(featuresWanted)
head(trainActivities)
head(trainSubjects)
head(allData)
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
source('~/data-science/run_analysis.R')
a <- rnorm(1000)
plot(a)
x <- rnorm(100)
y <- rnorm(100)
text(x, y, "SWIRL Rules!")
plot.new
plot.new()
plot.new()
text(x, y, "SWIRL Rules!")
?write.table
source('~/data-science/RepData_PeerAssessment1/code4.R')
setwd("./data-science/RepData_PeerAssessment1/")
source('~/data-science/RepData_PeerAssessment1/code4.R')
source('~/data-science/RepData_PeerAssessment1/code4.R')
